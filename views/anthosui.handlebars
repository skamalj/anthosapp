<!--
  This page created main side menu items along with routes and callable components.
  All new components, main or child, should be registered on this page and linked to routes.
  Except routing, nothing else dynamic happens on this page.
-->
<div id="app" class="container-fluid m-2 p-0">
  <div class="row m-0 p-0 align-top">
    <div class="align-top col-2 p-0">
      <div class="container m-0 p-0">
        <button type="button" data-toggle="collapse" href="#configmgmt"
          class="btn-block rounded-top btn-dark text-left dropdown-toggle text-info pl-1">ConfigMgmt</button>
      </div>
      <div class="collapse" id="configmgmt">
        <button type="button" v-on:click="routeTo('OnboardCluster')"
          class="btn-block btn-secondary pl-4 text-left  border-0">Onboard Cluster</button>
      </div>
      <div class="collapse" id="configmgmt">
        <button type="button" v-on:click="routeTo('ClusterObj')"
          class="btn-block btn-secondary pl-4 text-left  border-0">Cluster Config</button>
      </div>
      <div class="collapse" id="configmgmt">
        <button type="button" v-on:click="routeTo('NamespaceObj')"
          class="btn-block btn-secondary pl-4 text-left border-0 ">Namespaces</button>
      </div>
      <div class="container m-0 p-0">
        <button type="button" v-on:click="routeTo('PolicyAgentObj')"
          class="btn-block btn-dark text-info pl-1 text-left">Policy Agent</button>
      </div>
      <div class="container m-0 p-0">
        <button type="button" v-on:click="routeTo('NetworkPolicyObj')"
          class="btn-block btn-dark text-info pl-1 text-left">Network Policy</button>
      </div>
      <div class="container m-0 p-0">
        <button type="button" data-toggle="collapse" data-target="#tools"
          class="btn-block btn-dark text-info pl-1 text-left  dropdown-toggle">Tools</button>
      </div>
      <div class="collapse" id="tools">
        <button type="button" v-on:click="routeTo('repository')"
          class="btn-block btn-secondary pl-4 text-left border-0 ">Observe</button>
      </div>
      <div class="collapse" id="tools">
        <button type="button" v-on:click="routeTo('cluster')"
          class="btn-block btn-secondary pl-4 text-left border-0 ">Secure</button>
      </div>
      <div class="container m-0 p-0">
        <button type="button" data-toggle="collapse" data-target="#resources"
          class="btn-block btn-dark text-info pl-1 text-left  dropdown-toggle">Resources</button>
      </div>
      <div class="collapse" id="resources">
        <button type="button" v-on:click="routeTo('repository')"
          class="btn-block btn-secondary pl-4 text-left border-0 ">Repository</button>
      </div>
      <div class="collapse" id="resources">
        <button type="button" v-on:click="routeTo('cluster')"
          class="btn-block btn-secondary pl-4 text-left border-0 ">Cluster</button>
      </div>
    </div>

    <div class="col-10 justify-content-end">
      <router-view></router-view>
      <!--  <namespaces hidenamespace=true></namespaces> -->
      <div class="container" style="height: 75px;">
      </div>
    </div>
    <div class="fixed-bottom bg-dark overflow-auto" style="height: 75px;">
      <pre class="text-left text-success bg-dark m-0 p-0">\{{ globalobj.logstr }}</pre>
    </div>
  </div>
</div>
<script type="module">
  import cluster from './components/cluster.js';
  import repository from './components/repository.js';
  import OnboardCluster from './components/OnboardCluster.js';
  import NamespaceObj from './components/NamespaceObj.js';
  import Namespace from './components/namespaceobjects/namespace.js';
  import NSObjectYaml from './components/namespaceobjects/nsobjectyaml.js';
  import ResourceQuotas from './components/namespaceobjects/resourcequotas.js';

  import ClusterObj from './components/ClusterObj.js';
  import LabelCluster from './components/clusterobjects/clusterLabel.js';
  import ClusterRole from './components/clusterobjects/clusterRole.js'; 
  import Selector from './components/clusterobjects/Selector.js'; 
  import ClusterObjectYaml from './components/clusterobjects/clusterobjectyaml.js';

  import NetworkPolicyObj from './components/NetworkPolicyObj.js';
  import DefaultNetworkPolicy from './components/networkpolicyobjects/defaultnetworkpolicy.js';
  import CustomtNetworkPolicy from './components/networkpolicyobjects/customnetworkpolicy.js';

  import PolicyAgentObj from './components/policyAgentObj.js';
  import GeneralPolicies from './components/opaobjects/generalpolicyobjects.js'

  const routes = [
    { path: '/cluster', component: cluster, name: 'cluster' },
    { path: '/repository', component: repository, name: 'repository'},
    { path: '/OnboardCluster', component: OnboardCluster, name: 'OnboardCluster'},
    {
      path: '/NamespaceObj', component: NamespaceObj, name: 'NamespaceObj', children: [
      { path: '', redirect: 'Namespace' },
      { path: 'Namespace', component: Namespace, name: 'Namespace' },
      { path: 'ObjectYaml', component: NSObjectYaml, name: 'ObjectYaml' },
      { path: 'ResourceQuotas', component: ResourceQuotas, name: 'ResourceQuotas' },
      ]
    },
    {
      path: '/ClusterObj', component: ClusterObj, name: 'ClusterObj', children: [
      { path: '', redirect: 'ClusterLabel'},
      { path: 'ClusterLabel', component: LabelCluster },
      { path: 'ClusterRole', component: ClusterRole },
      { path: 'Selector', component: Selector },
      { path: 'ClusterObjectManifest', component: ClusterObjectYaml },
      ]
    },
    {
      path: '/NetworkPolicyObj', component: NetworkPolicyObj, name: 'NetworkPolicyObj', children: [
      { path: '', redirect: 'DefaultPolicy' },
      { path: 'DefaultPolicy', component: DefaultNetworkPolicy, name: 'DefaultPolicy' },
      { path: 'CustomPolicy', component: CustomtNetworkPolicy, name: 'CustomPolicy' },
      ]
    },
    {
      path: '/PolicyAgentObj', component: PolicyAgentObj, name: 'PolicyAgentObj', children: [
      { path: '', redirect: 'GeneralPolicies' },
      { path: 'GeneralPolicies', component: GeneralPolicies, name: 'GeneralPolicies' },
      { path: 'UploadManifest', component: ClusterObjectYaml, name: 'UploadManifest' },
      ]
    },
  ]

  const router = new VueRouter({
    routes
  })

  var app = new Vue({
    el: '#app',
    router: router,  
    methods: {
      routeTo(where) {
        const routeto = { name: where};
        this.$router.push(routeto);
      }
    }
  })
</script>