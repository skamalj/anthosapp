<!-- 
    This is the main parent page for the whole application. Creates Header and 
    global Vueobject to store repository list.
    This also provides main logging functionality to whole application.
    Provides functionality to sync selected repository to remote.
 -->
<!DOCTYPE html>

<head>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12"></script>
    <script src="https://unpkg.com/vue-router@2.0.0/dist/vue-router.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
        integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"
        integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">    
</head>

<body>
    <nav class="sticky-top navbar navbar-expand-sm bg-dark navbar-dark my-0 mx-0 px-2 py-0">
          <a class="navbar-brand m-0 p-0" href="#">
            <img src="/images/anthos.jpg" alt="responsive image" class="img-thumbnail">
          </a>
          <div class="col-2"></div>
          <div class="container  justify-content-end p-0 m-0">
            <div id="selectDiv">
                <label class="text-light" for="exampleFormControlSelect1">Select Repo</label>
                <select v-model:value="selected"  class="form-control-sm m-1 p-1" id="exampleFormControlSelect1">
                <option v-for="(rp, index) in repoList" :value="rp.name">\{{ rp.name }}</option>
                </select> 
                <button type="button m-0 p-0" class="btn btn-sm btn-light" v-on:click="syncRepo()">
                <i class="fa fa-sync-alt" style="color: Dodgerblue;" aria-hidden="true"></i>
                </button>
                <button type="button m-0 p-0" class="btn btn-sm btn-light" v-on:click="syncRepo()">
                <i v-bind:class="busyclass" style="color: Dodgerblue;" aria-hidden="true"></i>
                </button>
                <button type="button m-0 p-0" class="btn btn-sm btn-light" v-on:click="runNomos()">
                <i class="fas fa-history" style="color: Dodgerblue;" aria-hidden="true"></i>
                </button>
            </div>
          </div>
    </nav>

    {{{body}}}

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
        integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"
        integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV"
        crossorigin="anonymous"></script>
<script>
    var globalobj = new Vue({
        el: '#selectDiv',
        data: {
            selected: '',
            repoList: [],
            log: [""],
            busyclass: "fas fa-cog fa-lg"
        },
       computed: {
            logstr: function() {
                return this.log.join("\n");
            }
        },
        methods: {
            showBusy() {
                this.busyclass = "fas fa-cog fa-lg fa-spin"
            },
            hideBusy() {
                this.busyclass = "fas fa-cog fa-lg"
            },
            runNomos() {
            const vueObj = this;
            const formData = new FormData();
            formData.append('repoName', vueObj.selected);
            vueObj.showBusy();
            axios.post('/runNomos',
                formData,
                {
                    headers: {
                    'Content-Type': 'multipart/form-data',
                    },
                },
            ).then((resp) => {
                vueObj.appendLog(resp.data.stdout);
                vueObj.hideBusy();
            })
                .catch(function(err) {
                    window.alert(err);
                });
            },
            syncRepo() {
            const vueObj = this;
            const formData = new FormData();
            formData.append('repoName', vueObj.selected);
            vueObj.showBusy();
            axios.post('/syncRepo',
                formData,
                {
                    headers: {
                    'Content-Type': 'multipart/form-data',
                    },
                },
            ).then((resp) => {
                vueObj.appendLog(resp.data);
                vueObj.hideBusy();
            })
                .catch(function(err) {
                    window.alert(err);
                });
            },
            getRepoList() {    
                vueObj = this;     
                axios.post('/getrepolist')
                .then(function(res) {
                    vueObj.repoList = res.data;
                    if(res.data)
                        vueObj.selected = vueObj.repoList[0].name;
                })
                    .catch(function(err) {
                    window.alert(err);
                    });
            },
            appendLog(logstring) {
                this.log.unshift(logstring);
                this.log = this.log.slice(0,100);
            }
        },    
        created() {
            this.getRepoList();
        }
    })
</script>
</body>


</html>